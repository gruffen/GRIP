        /**
        * Runs a cascade classifier on an image.
        *
        * @param input          the image to run the classifier on
        * @param classifier     the clasifier to use
        * @param detections     the mat to store the detected regions in
        * @param scaleFactor    the scale factor of each successive downsized image
        * @param minNeighbors   how many neighbors each candidate rectangle should have to retain it
        * @param minSize        the minimum possible object size
        * @param maxSize        the maximum possible object size. If (0, 0), it is assumed to be unbounded
        */
        private void $tMeth.name($step.name())(Mat input, CascadeClassifier classifier, MatOfRect detections,
                double scaleFactor, int minNeighbors, Size minSize, Size maxSize) {
            classifier.detectMultiScale(input, detections, scaleFactor, minNeighbors, 0, minSize, maxSize);
        }